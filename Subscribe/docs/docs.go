// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/congratulations/subscriptions/sub/{subscriber}/{subto}": {
            "put": {
                "description": "There's only one function - subscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "This API can subscribe someone to someone.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee's id who's subscribed to somemone (SubtoId)",
                        "name": "subscriber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Employee's id who's subscriber (SubscriberId)",
                        "name": "subto",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "You've just subscribed to {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Something went wrong while we were trying to encrypt data to sends",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/congratulations/subscriptions/unsub/{subscriber}/{subto}": {
            "put": {
                "description": "There's only one functions - unsubscribe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "This API can unsubscribe someone from someone.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee's id who's subscribed to somemone (SubtoId)",
                        "name": "subscriber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Employee's id who's subscriber (SubscriberId)",
                        "name": "subto",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "You've just unsubscribed from {id}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Something went wrong while we were trying to encrypt data to sends",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.Error": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
